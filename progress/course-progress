	Intro
x-Introduction to programming
x-Introduction to Computer Science and Programming using Python
	Core Programming
Systematic Program Design
Programming Languages, Part A
Programming Languages, Part B
Programming Languages, Part C
Object-Oriented Design
Design Patterns
Software Architecture
	Core Math
Calculus 1A: Differentiation (alternative)
Calculus 1B: Integration
Calculus 1C: Coordinate Systems & Infinite Series
Mathematics for Computer Science (alternative)
The Missing Semester of Your CS Education
	Core Systems
Build a Modern Computer from First Principles: From Nand to Tetris (alternative)
Build a Modern Computer from First Principles: Nand to Tetris Part II
Operating Systems: Three Easy Pieces
Computer Networking: a Top-Down Approach
	Core Theory
Divide and Conquer, Sorting and Searching, and Randomized Algorithms
Graph Search, Shortest Paths, and Data Structures
Greedy Algorithms, Minimum Spanning Trees, and Dynamic Programming
Shortest Paths Revisited, NP-Complete Problems and What To Do About Them
	Security
Shortest Paths Revisited, NP-Complete Problems and What To Do About Them
Cybersecurity Fundamentals
Principles of Secure Coding
Identifying Security Vulnerabilities
Identifying Security Vulnerabilities in C/C++Programming
	Core Applications
Databases: Modeling and Theory
Databases: Relational Databases and SQL
Databases: Semistructured Data
Machine Learning
Software Engineering: Introduction
	Core-Ethics
Ethics, Technology and Engineering
Introduction to Intellectual Property
Data Privacy Fundamentals
	Advanced Programming
Parallel Programming
Compilers
Introduction to Haskell
Learn Prolog Now! (alternative)*
Software Debugging
Software Testing
	Advanced Theory
Theory of Computation (alternative)
Computational Geometry
Game Theory
	Advanced Math
Essence of Linear Algebra
Linear Algebra
Introduction to Numerical Methods
Introduction to Formal Logic
Probability
	Project
Fullstack Open or Cloud Computing or Data Science
