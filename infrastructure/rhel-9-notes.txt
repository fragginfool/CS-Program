netstat -tulpna --> ss -tupna
ss -tuna4 (all network sockets using IPv4 and both the TCP and UDP in numeric format
arp --> ip neigh
ifconfig --> ip addr

rpm -v <package> #checksum of rpms
#install a package from an ftp w/ username and password:
rpm -ivh ftp://<username>:<password>@<address>/<packageName>
#import a gpg key:
rpm --import /path/to/key

#some descriptions of folder locations:
- config- kernel configuration settings
- efi/ files required at boot by the UEFI firmware
- grub2/ grub config files
- initramfs- RAM disk filesystem, root filesystem called during boot?
- loader/ boot configs for the kernel
- system.map-* map of system names for vairable functions with their locations in memory
- vmlinuz-* actual linux kernel
#recovery:
delete rhgb quiet
systemd.unit=rescue.target    ----all mounted
systemd.unit=emergency.target ----nothing is mounted

#without root password
rd.break              # missing root password
mount -o remount,rw /sysroot
chroot /sysroot
passwd
touch /.autorelabel   #for selinux
reboot
systemctl get-default #gets default boot


#generate random password for root:
openssl rand -base64 15 | passwd --stdin root #this will hide the root password....don't do this...just wrote it down because it captures how to pass an output into a new command



ls -l /usr/lib/systemd/system/runlevel?.target
systemctl list-dependencies graphical.target
systemctl isolate multi-user.target #switches to the new run-level

systemd-analyze time #gives you startup time

#you can do persistent journal logging by running the following:
mkdir /var/log/journal
journalctl --flush

#after that is enabled you can get persistent logs from previous boots with:
journalctl -b 1

#to make sure a service can't be started use:
systemctl mask postfix.service

#setting time
timedatectl

timedatectl list-timezones

timedatectl set-timezone America/Los_Angeles

#look at time stuff:
chronyc sources -v

#edit /etc/sudoers file safely:
visudo

#force the kernel to re-read the partition table of a recently changed disk
partprobe /dev/sdb

#create an lvm:
pvcreate /dev/sda1
pvcreate /dev/sda1
vgcreate volumegroup /dev/sda1
lvcreate -l number_of_PEs volumegroup -n logicalvolume
lvcreate -L 200M volumegroup -n flex

#to see UUID numbers:
blkid /dev/sda1

firewall-cmd --list-all

#allow traffic through telnet:
firewall-cmd --permanent --add-service=telnet
firewall-cmd --reload

#SElinux
ls -Z #to see contexts

#exclude grep process from search:
ps aux | grep [f]irefox

#include the parent id:
ps axl

#see all bash test parameters:
man test

#for loop in bash
for n in 1 2 3; do
	echo "I love Linux #$n"
done


#podman and containers
#pull and run a container:

podman run -d --name webserver -p 8080:8080 registry.access.redhat.com/
ubi9/httpd-24

#build a container:

[root@server1 josh]# mv containerfile Containerfile

[root@server1 josh]# cat Containerfile
FROM registry.access.redhat.com/ubi9/python-39

LABEL maintainer="my guy"
LABEL description="PythonWebServer"

COPY index.html /app/index.html

EXPOSE 8000

WORKDIR /app

CMD ["python", "-m", "http.server"]


[root@server1 josh]# podman build -t python-webserver .

[root@server1 josh]# podman run -p 8000:8000 3f2
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
192.168.56.103 - - [07/Jun/2024 17:17:15] "GET / HTTP/1.1" 200 -
192.168.56.103 - - [07/Jun/2024 17:17:15] code 404, message File not found
192.168.56.103 - - [07/Jun/2024 17:17:15] "GET /favicon.ico HTTP/1.1" 404 -





